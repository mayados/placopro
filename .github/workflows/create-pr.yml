# ===========================
# FICHIER : .github/workflows/create-pr.yml
# ROLE : CrÃ©e automatiquement une Pull Request de "test" vers "main" aprÃ¨s succÃ¨s du workflow CircleCI
# ===========================

name: Create Pull Request # Nom du workflow GitHub

on:
  workflow_run: # Ce dÃ©clencheur attend que lâ€™exÃ©cution dâ€™un autre workflow se termine (ici : test CircleCI)
    workflows: ["test-workflow"] # Nom exact du workflow dÃ©fini dans CircleCI (important pour que GitHub le reconnaisse)
    types:
      - completed # ExÃ©cute ce workflow uniquement lorsque le workflow CircleCI est terminÃ© (succÃ¨s ou Ã©chec)

jobs:
  create-pr:
    # Verify circleCI tests have passed with success
    if: ${{ github.event.workflow_run.conclusion == 'success' }} # Ne crÃ©e une PR que si le workflow prÃ©cÃ©dent a rÃ©ussi (tests OK)
    runs-on: ubuntu-latest # ExÃ©cute sur une machine Ubuntu
    steps:
      - name: Checkout code # Clone le repo pour permettre Ã  l'action suivante de crÃ©er une PR
        uses: actions/checkout@v4 # Action officielle GitHub

      - name: Create Pull Request to main # Ã‰tape pour crÃ©er automatiquement une PR de test â†’ main
        uses: peter-evans/create-pull-request@v5 # Utilise une action GitHub spÃ©cialisÃ©e et bien maintenue pour crÃ©er des PR automatiquement
        with:
          # Using secure PAT (Github Personnal Access Token)
          token: ${{ secrets.GH_PAT }}  # Utilise un token personnel sÃ©curisÃ© stockÃ© dans les secrets GitHub
          base: main # Branche de destination de la PR (ici, "main")
          branch: test # Branche source de la PR (ici, "test")
          title: "ğŸ”„ Merge `test` -> `main` (Tests success)" # Titre automatique de la PR
          body: "Tests CircleCI validÃ©s âœ…. PR prÃªte Ã  Ãªtre revue."  # Description de la PR pour les reviewers
          draft: false # CrÃ©e une PR directement en mode "prÃªte Ã  merger" (pas un brouillon)